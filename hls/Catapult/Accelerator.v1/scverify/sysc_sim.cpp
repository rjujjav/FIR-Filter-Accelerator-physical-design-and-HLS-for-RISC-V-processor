// ----------------------------------------------------------------------------
// SystemC SCVerify Flow -- sysc_sim.cpp
//
//    HLS version: 2021.1/950854 Production Release
//       HLS date: Mon Aug  2 21:36:02 PDT 2021
//  Flow Packages: HDL_Tcl 8.0a, SCVerify 10.4
//
//   Generated by: rjujjav@lib-41917.eos.ncsu.edu
// Generated date: Sat Dec 09 00:51:57 EST 2023
//
// ----------------------------------------------------------------------------
// 
// -------------------------------------
// sysc_sim_wrapper
// Represents a new SC_MODULE having the same interface as the original model Accelerator_rtl
// -------------------------------------
// 
#include "sysc_sim.h"

double __scv_hold_time = 0.0; // default for non-gate simulation is zero


// ---------------------------------------------------------------
// Process: SC_METHOD update_proc
// Static sensitivity: sensitive  << clk << reset_bar << axi_read.axi::axi4<axi::cfg::standard >::read::slave<Connections::SYN_PORT >::ar.Connections::InBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::AddrPayload >::val << ccs_rtl_SIG_axi_read_ar_rdy << axi_read.axi::axi4<axi::cfg::standard >::read::slave<Connections::SYN_PORT >::ar.Connections::InBlocking<axi::axi4<axi::cfg::standard >::AddrPayload, Connections::SYN_PORT >::msg << ccs_rtl_SIG_axi_read_r_val << axi_read.axi::axi4<axi::cfg::standard >::read::slave<Connections::SYN_PORT >::r.Connections::OutBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::ReadPayload >::rdy << ccs_rtl_SIG_axi_read_r_msg << axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::aw.Connections::InBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::AddrPayload >::val << ccs_rtl_SIG_axi_write_aw_rdy << axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::aw.Connections::InBlocking<axi::axi4<axi::cfg::standard >::AddrPayload, Connections::SYN_PORT >::msg << axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::w.Connections::InBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::WritePayload >::val << ccs_rtl_SIG_axi_write_w_rdy << axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::w.Connections::InBlocking<axi::axi4<axi::cfg::standard >::WritePayload, Connections::SYN_PORT >::msg << ccs_rtl_SIG_axi_write_b_val << axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::b.Connections::OutBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::WRespPayload >::rdy << ccs_rtl_SIG_axi_write_b_msg;

void CCS_RTL::sysc_sim_wrapper::update_proc() {
   // none.sc_in field_key=clk:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1096:clk:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1096
   sc_logic t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1096_0; // NPS - LV to hold field
   ccs_rtl_SIG_clk.write(clk.read());
   
   // none.sc_in field_key=reset_bar:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1097:reset_bar:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1097
   sc_logic t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1097_1; // NPS - LV to hold field
   type_to_vector(reset_bar.read(),1,t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1097_1); // read orig port and type convert
   ccs_rtl_SIG_reset_bar.write(t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1097_1); // then write to RTL port
   
   // none.sc_in field_key=axi_read:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1101:val:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1176
   sc_logic t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1176_2; // NPS - LV to hold field
   type_to_vector(axi_read.axi::axi4<axi::cfg::standard >::read::slave<Connections::SYN_PORT >::ar.Connections::InBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::AddrPayload >::val.read(),1,t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1176_2); // read orig port and type convert
   ccs_rtl_SIG_axi_read_ar_val.write(t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1176_2); // then write to RTL port
   
   // none.sc_out field_key=axi_read:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1101:rdy:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1190
   bool d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1190_3;
   vector_to_type(ccs_rtl_SIG_axi_read_ar_rdy.read(), 1, &d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1190_3);
   axi_read.axi::axi4<axi::cfg::standard >::read::slave<Connections::SYN_PORT >::ar.Connections::InBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::AddrPayload >::rdy.write(d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1190_3);
   
   // none.sc_in field_key=axi_read:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1101:msg:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1204
   sc_lv< 44 > t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1204_4; // NPS - LV to hold field
   type_to_vector(axi_read.axi::axi4<axi::cfg::standard >::read::slave<Connections::SYN_PORT >::ar.Connections::InBlocking<axi::axi4<axi::cfg::standard >::AddrPayload, Connections::SYN_PORT >::msg.read(),44,t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1204_4); // read orig port and type convert
   ccs_rtl_SIG_axi_read_ar_msg.write(t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1204_4); // then write to RTL port
   
   // none.sc_out field_key=axi_read:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1101:val:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1242
   bool d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1242_5;
   vector_to_type(ccs_rtl_SIG_axi_read_r_val.read(), 1, &d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1242_5);
   axi_read.axi::axi4<axi::cfg::standard >::read::slave<Connections::SYN_PORT >::r.Connections::OutBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::ReadPayload >::val.write(d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1242_5);
   
   // none.sc_in field_key=axi_read:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1101:rdy:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1248
   sc_logic t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1248_6; // NPS - LV to hold field
   type_to_vector(axi_read.axi::axi4<axi::cfg::standard >::read::slave<Connections::SYN_PORT >::r.Connections::OutBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::ReadPayload >::rdy.read(),1,t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1248_6); // read orig port and type convert
   ccs_rtl_SIG_axi_read_r_rdy.write(t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1248_6); // then write to RTL port
   
   // none.sc_out field_key=axi_read:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1101:msg:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1254
   sc_dt::sc_lv<71 > d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1254_7;
   vector_to_type(ccs_rtl_SIG_axi_read_r_msg.read(), 71, &d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1254_7);
   axi_read.axi::axi4<axi::cfg::standard >::read::slave<Connections::SYN_PORT >::r.Connections::OutBlocking<axi::axi4<axi::cfg::standard >::ReadPayload, Connections::SYN_PORT >::msg.write(d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1254_7);
   
   // none.sc_in field_key=axi_write:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1260:val:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1330
   sc_logic t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1330_8; // NPS - LV to hold field
   type_to_vector(axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::aw.Connections::InBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::AddrPayload >::val.read(),1,t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1330_8); // read orig port and type convert
   ccs_rtl_SIG_axi_write_aw_val.write(t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1330_8); // then write to RTL port
   
   // none.sc_out field_key=axi_write:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1260:rdy:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1344
   bool d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1344_9;
   vector_to_type(ccs_rtl_SIG_axi_write_aw_rdy.read(), 1, &d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1344_9);
   axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::aw.Connections::InBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::AddrPayload >::rdy.write(d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1344_9);
   
   // none.sc_in field_key=axi_write:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1260:msg:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1358
   sc_lv< 44 > t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1358_10; // NPS - LV to hold field
   type_to_vector(axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::aw.Connections::InBlocking<axi::axi4<axi::cfg::standard >::AddrPayload, Connections::SYN_PORT >::msg.read(),44,t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1358_10); // read orig port and type convert
   ccs_rtl_SIG_axi_write_aw_msg.write(t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1358_10); // then write to RTL port
   
   // none.sc_in field_key=axi_write:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1260:val:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1407
   sc_logic t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1407_11; // NPS - LV to hold field
   type_to_vector(axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::w.Connections::InBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::WritePayload >::val.read(),1,t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1407_11); // read orig port and type convert
   ccs_rtl_SIG_axi_write_w_val.write(t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1407_11); // then write to RTL port
   
   // none.sc_out field_key=axi_write:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1260:rdy:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1421
   bool d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1421_12;
   vector_to_type(ccs_rtl_SIG_axi_write_w_rdy.read(), 1, &d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1421_12);
   axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::w.Connections::InBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::WritePayload >::rdy.write(d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1421_12);
   
   // none.sc_in field_key=axi_write:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1260:msg:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1435
   sc_lv< 73 > t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1435_13; // NPS - LV to hold field
   type_to_vector(axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::w.Connections::InBlocking<axi::axi4<axi::cfg::standard >::WritePayload, Connections::SYN_PORT >::msg.read(),73,t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1435_13); // read orig port and type convert
   ccs_rtl_SIG_axi_write_w_msg.write(t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1435_13); // then write to RTL port
   
   // none.sc_out field_key=axi_write:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1260:val:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1473
   bool d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1473_14;
   vector_to_type(ccs_rtl_SIG_axi_write_b_val.read(), 1, &d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1473_14);
   axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::b.Connections::OutBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::WRespPayload >::val.write(d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1473_14);
   
   // none.sc_in field_key=axi_write:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1260:rdy:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1479
   sc_logic t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1479_15; // NPS - LV to hold field
   type_to_vector(axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::b.Connections::OutBlocking_Ports_abs<axi::axi4<axi::cfg::standard >::WRespPayload >::rdy.read(),1,t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1479_15); // read orig port and type convert
   ccs_rtl_SIG_axi_write_b_rdy.write(t_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1479_15); // then write to RTL port
   
   // none.sc_out field_key=axi_write:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1260:msg:84f4e614-ef95-4d1f-bbd5-c1e484b4bcf5-1485
   sc_dt::sc_lv<6 > d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1485_16;
   vector_to_type(ccs_rtl_SIG_axi_write_b_msg.read(), 6, &d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1485_16);
   axi_write.axi::axi4<axi::cfg::standard >::write::slave<Connections::SYN_PORT >::b.Connections::OutBlocking<axi::axi4<axi::cfg::standard >::WRespPayload, Connections::SYN_PORT >::msg.write(d_84f4e614_ef95_4d1f_bbd5_c1e484b4bcf5_1485_16);
   
}
